{"version":3,"sources":["assets/italic.svg","assets/bold.svg","assets/textColor.svg","global-styles.js","lib/colors.js","ui/templates/Main/Main.js","ui/templates/PageContainer/PageContainer.js","ui/templates/FieldWrapper/FieldWrapper.js","ui/molecules/Field/Field.js","constants/colors.js","ui/molecules/ColorPicker/ColorPicker.js","ui/molecules/ColorCircle/ColorCircle.js","ui/molecules/Panel/Panel.js","ui/molecules/PanelButton/PanelButton.js","ui/molecules/Select/Select.js","ui/molecules/FontColorButton/FontColorButton.js","ui/molecules/PanelColorButton/PanelColorButton.js","ui/atoms/Tab/Tab.js","ui/atoms/Button/Button.js","features/widgets/molecules/EmailField/EmailField.js","features/widgets/organisms/Sample/Sample.js","features/widgets/organisms/BackgroundColorPicker/BackgroundColorPicker.js","ui/organisms/Tabs/Tabs.js","constants/text.js","features/widgets/organisms/WidgetTags/WidgetTags.js","features/widgets/organisms/Actions/Actions.js","features/widgets/pages/Configuration/Configuration.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","GlobalStyle","createGlobalStyle","_templateObject","blue","gray","white","SideBar","styled","aside","Main_templateObject","Wrapper","main","_templateObject2","Main","memo","_ref","children","react_default","a","createElement","PageContainer","div","PageContainer_templateObject","FieldWrapper","section","FieldWrapper_templateObject","Label","label","Field_templateObject","Input","input","Field_templateObject2","lighten","Field","forwardRef","ref","id","placeholder","value","onChange","onFocus","onBlur","htmlFor","propTypes","PropTypes","string","isRequired","func","defaultProps","COLORS","ColorPicker_templateObject","ColorPickerView","selectedColor","onClick","ColorPicker_Wrapper","map","color","ColorCircle_ColorCircle","key","ColorPicker","Circle","button","ColorCircle_templateObject","_ref2","darken","I","i","ColorCircle_templateObject2","_ref3","invert","ColorCircle","_ref4","type","Panel_templateObject","ChildWrapper","Panel_templateObject2","Panel","Panel_Wrapper","React","Children","child","PanelButton_templateObject","checked","PanelButton_templateObject2","Icon","img","_templateObject3","PanelButton","iconSrc","className","PanelButton_Label","PanelButton_Input","src","bool","SelectTag","select","Select_templateObject","Select","options","option","FontColorButton","FontColorButton_templateObject","PanelColorButton_templateObject","Button","PanelColorButton_templateObject2","PanelColorButton","PanelColorButton_Wrapper","Tab","Tab_templateObject","isActive","Button_templateObject","outline","backgroundColor","concat","fontSize","_ref5","_ref6","EmailField_templateObject","EmailField_templateObject2","mainSize","mainColor","bold","italic","fontFamily","EmailField","_ref7","mainBold","mainItalic","mainFont","EmailField_Wrapper","EmailField_Input","fontStyles","css","Sample_templateObject","size","Sample_templateObject2","_ref8","Message","span","Sample_templateObject3","Header","h2","_templateObject4","StyledButton","_templateObject5","_ref9","MainWrapper","_templateObject6","Sample","_ref10","header","headerFont","headerBold","headerItalic","headerSize","headerColor","buttonFont","buttonBold","buttonItalic","buttonSize","buttonColor","buttonBackgroundColor","Sample_Wrapper","EmailField_EmailField","BackgroundColorPicker_templateObject","BackgroundColorPicker_templateObject2","PickerWrapper","BackgroundColorPicker_templateObject3","BackgroundColorPicker","_PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","isOpen","setInputRef","node","inputRef","setPickerRef","pickerRef","handleOpenPicker","setState","handleClosePicker","event","inputRefExists","contains","target","pickerRefExists","inherits","createClass","document","addEventListener","removeEventListener","_this$props","props","handleFieldChange","BackgroundColorPicker_Wrapper","BackgroundColorPicker_FieldWrapper","PureComponent","TabList","Tabs_templateObject","TabContent","Tabs_templateObject2","Tabs","activeTab","tabs","tabIndex","findIndex","tab","toArray","FONT_SIZES_LIST","FONT_FAMILIES","TabsContainer","WidgetTags_templateObject","WidgetTags_templateObject2","availableTabs","WidgetTags","isFontPickerOpen","isButtonPickerOpen","handleTabClick","tag","setFontColorButtonRef","fontColorButtonRef","setButtonColorButtonRef","buttonColorButtonRef","handleFontPickerOpen","handleButtonPickerOpen","pickerExists","fontColorButtonExists","buttonColorButtonRefExists","handleColorChange","buttonName","_this$state","handleColorClick","_this$state2","handlePanelButtonClick","Tabs_Tabs","Panel_Panel","italicIcon","boldIcon","textColor","WidgetTags_PickerWrapper","Actions_templateObject","Actions","Actions_Wrapper","Button_Button","Configuration","config","name","objectSpread","defineProperty","property","_this2","WidgetTags_WidgetTags","BackgroundColorPicker_BackgroundColorPicker","Boolean","window","location","hostname","match","ReactDOM","render","react","Configuration_Configuration","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a96a10e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/italic.fa84e6f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bold.7c5dacd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/textColor.92b6260a.svg\";","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tfont-family: Arial, sans-serif;\n    margin: 0;\n    font-size: 16px;\n  }\n  \n  body, #root {\n    height: 100vh;\n  }\n\n  /* reset default styles */\n  input, button, select {\n    outline: none;\n    border: 0;\n  }\n`\n","export const blue = {\n  lighter: '#b29ce0',\n  light: '#9878d6',\n  medium: '#648AD1',\n}\n\nexport const gray = {\n  lighter: '#c1c3d0',\n  light: '#d1d6da',\n  medium: '#6f7e8e',\n}\n\nexport const white = {\n  medium: '#ffffff',\n}\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { blue } from '../../../lib/colors'\nimport { PageContainer } from '..'\n\nconst SideBar = styled.aside`\n  width: 216px;\n  background-color: ${blue.medium};\n`\n\nconst Wrapper = styled.main`\n  display: flex;\n  min-height: 100%;\n`\n\nexport const MainView = ({ children }) => (\n  <Wrapper>\n    <SideBar />\n    <PageContainer>{children}</PageContainer>\n  </Wrapper>\n)\n\nMainView.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport const Main = memo(MainView)\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n  margin-top: 30px;\n  margin-left: 40px;\n  width: 600px;\n  margin-bottom: 40px;\n`\n","import styled from 'styled-components'\n\nimport { gray } from '../../../lib/colors'\n\nexport const FieldWrapper = styled.section`\n  height: 34px;\n  border-bottom: 1px solid ${gray.light};\n  margin-bottom: 20px;\n`\n","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { lighten } from 'polished'\n\nimport { gray } from '../../../lib/colors'\n\nconst Label = styled.label`\n  color: ${gray.medium};\n  font-size: 14px;\n  font-weight: bold;\n  margin-right: 15px;\n  cursor: pointer;\n`\n\nconst Input = styled.input`\n  color: ${gray.medium};\n  font-size: 14px;\n\n  &::placeholder {\n    color: ${lighten(0.3, gray.medium)};\n  }\n`\n\nexport const Field = forwardRef(({ id, placeholder, value, label, onChange, onFocus, onBlur }, ref) => (\n  <div ref={ref}>\n    <Label htmlFor={id}>{label}</Label>\n    <Input id={id} placeholder={placeholder} value={value} onChange={onChange} onFocus={onFocus} onBlur={onBlur} />\n  </div>\n))\n\nField.propTypes = {\n  id: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n}\n\nField.defaultProps = {\n  onFocus: null,\n  onBlur: null,\n}\n","export const COLORS = [\n  '#000000',\n  '#454545',\n  '#666666',\n  '#989898',\n  '#b6b6b6',\n  '#cbcbcb',\n  '#d8d8d8',\n  '#eeeef0',\n  '#f3f3f3',\n  '#ffffff',\n  '#3884ee',\n  '#2800ff',\n  '#a800ff',\n  '#ff00ff',\n  '#f00f00',\n  '#ff9300',\n  '#fcff00',\n  '#ff0000',\n]\n","import React, { forwardRef, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { gray, white } from '../../../lib/colors'\nimport { ColorCircle } from '..'\nimport { COLORS } from '../../../constants/colors'\n\nconst Wrapper = styled.div`\n  background-color: ${white.medium};\n  max-width: 308px;\n  padding: 19px;\n  border: 1px solid ${gray.light};\n  border-top: 0;\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n`\n\nconst ColorPickerView = forwardRef(({ selectedColor, onClick }, ref) => (\n  <Wrapper ref={ref}>\n    {COLORS.map(color => (\n      <ColorCircle key={color} color={color} selectedColor={selectedColor} onClick={() => onClick(color)} />\n    ))}\n  </Wrapper>\n))\n\nColorPickerView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selectedColor: PropTypes.string.isRequired,\n}\n\nexport const ColorPicker = memo(ColorPickerView)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { darken, invert } from 'polished'\n\nconst Circle = styled.button`\n  position: relative;\n  height: 32px;\n  width: 32px;\n  background-color: ${({ color }) => color};\n  border-radius: 30px;\n  border: 1px solid ${({ color }) => darken(0.1, color)}};\n  margin: 6px;\n  cursor: pointer;\n`\n\nconst I = styled.i`\n  left: 0;\n  right: 0;\n  top: 7px;\n  position: absolute;\n  margin: auto;\n  width: 5px;\n  height: 10px;\n  border: solid ${({ color }) => invert(color)};\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n`\n\nexport const ColorCircle = ({ color, selectedColor, onClick }) => (\n  <Circle type=\"button\" color={color} onClick={onClick}>\n    {color === selectedColor && <I color={color} />}\n  </Circle>\n)\n\nColorCircle.propTypes = {\n  color: PropTypes.string.isRequired,\n  selectedColor: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { gray } from '../../../lib/colors'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst ChildWrapper = styled.div`\n  margin-right: 10px;\n  padding-right: 10px;\n  border-right: 1px solid ${gray.light};\n\n  &:last-child {\n    border-right: none;\n  }\n`\n\nexport const Panel = ({ children }) => (\n  <Wrapper>\n    {React.Children.map(children, child => (\n      <ChildWrapper>{child}</ChildWrapper>\n    ))}\n  </Wrapper>\n)\n\nPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { lighten } from 'polished'\n\nimport { gray } from '../../../lib/colors'\n\nconst Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 24px;\n  width: 24px;\n  cursor: pointer;\n  font-size: 22px;\n  user-select: none;\n  border-radius: 2px;\n  background-color: ${({ checked }) => checked && lighten(0.09, gray.lighter)};\n\n  &:hover {\n    background-color: ${({ checked }) => !checked && lighten(0.15, gray.lighter)};\n  }\n`\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n`\n\nconst Icon = styled.img`\n  height: 20px;\n  width: 20px;\n`\n\nexport const PanelButton = forwardRef(({ id, iconSrc, checked, onChange, className }, ref) => (\n  <Label ref={ref} htmlFor={id} checked={checked} className={className}>\n    <Input type=\"checkbox\" id={id} checked={checked} onChange={onChange} />\n    <Icon src={iconSrc} />\n  </Label>\n))\n\nPanelButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  iconSrc: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  className: PropTypes.string,\n}\n\nPanelButton.defaultProps = {\n  className: null,\n}\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { white } from '../../../lib/colors'\n\nconst SelectTag = styled.select`\n  display: flex;\n  align-items: center;\n  appearance: none;\n  background-color: ${white.medium};\n  border: 0;\n  height: 20px;\n  cursor: pointer;\n  font-weight: 14px;\n`\n\nconst SelectView = ({ id, options, onChange, value }) => (\n  <SelectTag id={id} onChange={onChange} value={value}>\n    {options.map(option => (\n      <option key={option}>{option}</option>\n    ))}\n  </SelectTag>\n)\n\nSelectView.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n}\n\nexport const Select = memo(SelectView)\n","import styled from 'styled-components'\n\nimport { PanelButton } from '..'\n\nexport const FontColorButton = styled(PanelButton)`\n  position: relative;\n\n  &:after {\n    content: '';\n    width: 60%;\n    border-bottom: solid 3px ${({ color }) => color};\n    position: absolute;\n    bottom: 3px;\n    z-index: 1;\n  }\n`\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`\n\nconst Button = styled.button`\n  height: 18px;\n  width: 18px;\n  background-color: ${({ color }) => color};\n  cursor: pointer;\n`\n\nexport const PanelColorButton = forwardRef(({ color, onClick }, ref) => (\n  <Wrapper ref={ref}>\n    <Button type=\"button\" color={color} onClick={onClick} />\n  </Wrapper>\n))\n\nPanelColorButton.propTypes = {\n  color: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n","import styled from 'styled-components'\n\nimport { gray, blue, white } from '../../../lib/colors'\n\nexport const Tab = styled.button`\n  position: relative;\n  bottom: -1px;\n  border: 1px solid ${({ isActive }) => (isActive ? gray.light : 'transparent')};\n  border-bottom: 0;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  padding: 10px 20px;\n  color: ${({ isActive }) => (!isActive ? gray.lighter : blue.light)};\n  background-color: ${({ isActive }) => (isActive ? white.medium : 'transparent')};\n  margin: 0;\n\n  &:hover {\n    color: ${({ isActive }) => (!isActive ? blue.lighter : null)};\n  }\n`\n","import styled from 'styled-components'\nimport { darken } from 'polished'\nimport PropTypes from 'prop-types'\n\nimport { white, gray } from '../../../lib/colors'\n\nexport const Button = styled.button`\n  border: ${({ outline, backgroundColor }) => outline && `1px solid ${backgroundColor}`};\n  background-color: ${({ outline, backgroundColor }) => (!outline ? backgroundColor : 'transparent')};\n  padding: 0.9em 2.8em;\n  border-radius: 5px;\n  cursor: pointer;\n  color: ${({ outline, backgroundColor }) => (outline ? backgroundColor : white.medium)};\n  font-size: ${({ fontSize }) => `${fontSize}px`}\n\n  &:hover {\n    background-color: ${({ outline, backgroundColor }) => (outline ? backgroundColor : darken(0.1, backgroundColor))};\n    color: ${({ outline }) => outline && white.medium};\n  }\n`\n\nButton.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n  outline: PropTypes.bool.isRequired,\n  color: PropTypes.string.isRequired,\n  fontSize: PropTypes.string.isRequired,\n}\n\nButton.defaultProps = {\n  outline: false,\n  backgroundColor: '#648AD1',\n  color: gray.medium,\n  fontSize: '14',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { lighten } from 'polished'\n\nimport { gray } from '../../../../lib/colors'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${gray.light};\n  max-width: 350px;\n  width: 100%;\n  padding: 4px 0;\n  margin-top: 40px;\n`\nconst Input = styled.input`\n  font-size: ${({ mainSize }) => `${mainSize}px`};\n  background-color: transparent;\n  width: 100%;\n  color: ${({ mainColor }) => mainColor};\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n  font-style: ${({ italic }) => (italic ? 'italic' : 'normal')};\n  font-family: ${({ fontFamily }) => fontFamily}\n\n  &::placeholder {\n    color: ${({ mainColor }) => lighten(0.3, mainColor)};\n  }\n`\n\nexport const EmailField = ({ mainSize, mainColor, mainBold, mainItalic, mainFont }) => (\n  <Wrapper>\n    <Input\n      placeholder=\"Введите e-mail\"\n      mainSize={mainSize}\n      mainColor={mainColor}\n      bold={mainBold}\n      italic={mainItalic}\n      fontFamily={mainFont}\n    />\n  </Wrapper>\n)\n\nEmailField.propTypes = {\n  mainSize: PropTypes.string.isRequired,\n  mainColor: PropTypes.string.isRequired,\n  mainBold: PropTypes.bool.isRequired,\n  mainItalic: PropTypes.bool.isRequired,\n  mainFont: PropTypes.string.isRequired,\n}\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components'\n\nimport { gray } from '../../../../lib/colors'\nimport { Button } from '../../../../ui/atoms'\nimport { EmailField } from '../../molecules'\n\nconst fontStyles = css`\n  font-size: ${({ size }) => `${size}px`};\n  font-family: ${({ fontFamily }) => fontFamily}\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n  font-style: ${({ italic }) => (italic ? 'italic' : 'normal')};\n  color: ${({ color }) => color};\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  border: 1px solid ${gray.light};\n  padding-top: 100px;\n  padding-bottom: 95px;\n  color: ${({ mainColor }) => mainColor};\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  font-size: ${({ mainSize }) => `${mainSize}px`};\n  text-align: center;\n`\n\nconst Message = styled.span`\n  display: block;\n  margin-top: 50px;\n`\n\nconst Header = styled.h2`\n  margin-top: 0px;\n  word-break: break-word;\n  ${fontStyles}\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: 100px;\n  ${fontStyles}\n  background-color: ${({ backgroundColor }) => backgroundColor}\n`\n\nconst MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  ${fontStyles}\n`\n\nconst SampleView = ({\n  header,\n  headerFont,\n  headerBold,\n  headerItalic,\n  headerSize,\n  headerColor,\n  backgroundColor,\n  mainFont,\n  mainBold,\n  mainItalic,\n  mainSize,\n  mainColor,\n  buttonFont,\n  buttonBold,\n  buttonItalic,\n  buttonSize,\n  buttonColor,\n  buttonBackgroundColor,\n}) => (\n  <Wrapper backgroundColor={backgroundColor} mainSize={mainSize} mainColor={mainColor}>\n    <Header size={headerSize} bold={headerBold} italic={headerItalic} color={headerColor} fontFamily={headerFont}>\n      {header}\n    </Header>\n    <MainWrapper bold={mainBold} italic={mainItalic} fontFamily={mainFont}>\n      <EmailField\n        mainSize={mainSize}\n        mainColor={mainColor}\n        mainBold={mainBold}\n        mainItalic={mainItalic}\n        mainFont={mainFont}\n      />\n      <Message>Процесс займет у вас не больше 10 минут</Message>\n    </MainWrapper>\n    <StyledButton\n      type=\"button\"\n      fontSize={buttonSize}\n      bold={buttonBold}\n      italic={buttonItalic}\n      fontFamily={buttonFont}\n      color={buttonColor}\n      backgroundColor={buttonBackgroundColor}\n    >\n      Далее\n    </StyledButton>\n  </Wrapper>\n)\n\nSampleView.propTypes = {\n  header: PropTypes.string.isRequired,\n  headerFont: PropTypes.string.isRequired,\n  headerBold: PropTypes.bool.isRequired,\n  headerItalic: PropTypes.bool.isRequired,\n  headerSize: PropTypes.string.isRequired,\n  headerColor: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  mainFont: PropTypes.string.isRequired,\n  mainBold: PropTypes.bool.isRequired,\n  mainItalic: PropTypes.bool.isRequired,\n  mainSize: PropTypes.string.isRequired,\n  mainColor: PropTypes.string.isRequired,\n  buttonFont: PropTypes.string.isRequired,\n  buttonSize: PropTypes.string.isRequired,\n  buttonBold: PropTypes.bool.isRequired,\n  buttonItalic: PropTypes.bool.isRequired,\n  buttonColor: PropTypes.string.isRequired,\n  buttonBackgroundColor: PropTypes.string.isRequired,\n}\n\nexport const Sample = memo(SampleView)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Field, ColorPicker } from '../../../../ui/molecules'\n\nconst Wrapper = styled.div`\n  margin-bottom: 37px;\n  position: relative;\n`\n\nconst FieldWrapper = styled.section`\n  height: 34px;\n  border-bottom: 1px solid #d1d6da;\n`\n\nconst PickerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n`\n\nexport class BackgroundColorPicker extends PureComponent {\n  state = {\n    isOpen: false,\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClosePicker)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClosePicker)\n  }\n\n  setInputRef = node => {\n    this.inputRef = node\n  }\n\n  setPickerRef = node => {\n    this.pickerRef = node\n  }\n\n  handleOpenPicker = () => {\n    this.setState({\n      isOpen: true,\n    })\n  }\n\n  handleClosePicker = event => {\n    const inputRefExists = this.inputRef && !this.inputRef.contains(event.target)\n    const pickerRefExists = this.pickerRef && !this.pickerRef.contains(event.target)\n\n    if (inputRefExists && pickerRefExists) {\n      this.setState({\n        isOpen: false,\n      })\n    }\n  }\n\n  render() {\n    const { backgroundColor, handleFieldChange, onClick } = this.props\n    const { isOpen } = this.state\n\n    return (\n      <Wrapper>\n        <FieldWrapper>\n          <Field\n            ref={this.setInputRef}\n            value={backgroundColor}\n            id=\"backgroundColor\"\n            placeholder=\"Цвет основного фона\"\n            label=\"Цвет основного фона:\"\n            onChange={handleFieldChange}\n            onFocus={this.handleOpenPicker}\n          />\n        </FieldWrapper>\n        <PickerWrapper>\n          {isOpen && <ColorPicker ref={this.setPickerRef} onClick={onClick} selectedColor={backgroundColor} />}\n        </PickerWrapper>\n      </Wrapper>\n    )\n  }\n}\n\nBackgroundColorPicker.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n  handleFieldChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Tab } from '../../atoms'\nimport { gray } from '../../../lib/colors'\n\nconst TabList = styled.div`\n  display: flex;\n`\n\nexport const TabContent = styled.div`\n  border: 1px solid ${gray.light};\n  padding: 15px 20px;\n`\n\nexport const Tabs = ({ activeTab, tabs, onClick, children }) => {\n  const tabIndex = tabs.findIndex(tab => tab.key === activeTab)\n\n  return (\n    <div>\n      <TabList>\n        {tabs.map(({ key, value }) => (\n          <Tab type=\"button\" key={key} isActive={activeTab === key} onClick={event => onClick(key)}>\n            {value}\n          </Tab>\n        ))}\n      </TabList>\n      <TabContent>{React.Children.toArray(children)[tabIndex]}</TabContent>\n    </div>\n  )\n}\n\nTabs.propTypes = {\n  activeTab: PropTypes.string.isRequired,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      value: PropTypes.string,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n}\n","export const FONT_SIZES_LIST = ['8', '9', '10', '11', '12', '14', '18', '24', '30', '36', '48', '60', '72']\nexport const FONT_FAMILIES = ['Arial', 'Times New Roman']\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Panel, PanelButton, Select, ColorPicker, FontColorButton, PanelColorButton } from '../../../../ui/molecules'\nimport { Tabs } from '../../../../ui/organisms'\nimport italicIcon from '../../../../assets/italic.svg'\nimport boldIcon from '../../../../assets/bold.svg'\nimport textColor from '../../../../assets/textColor.svg'\nimport { FONT_SIZES_LIST, FONT_FAMILIES } from '../../../../constants/text'\n\nexport const TabsContainer = styled.div`\n  position: relative;\n  margin-bottom: 24px;\n`\n\nconst PickerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n`\n\nconst availableTabs = [\n  { key: 'title', value: 'Заголовок' },\n  { key: 'mainText', value: 'Основной текст' },\n  { key: 'button', value: 'Кнопка' },\n]\n\nexport class WidgetTags extends PureComponent {\n  state = {\n    activeTab: availableTabs[0].key,\n    isFontPickerOpen: false,\n    isButtonPickerOpen: false,\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClosePicker)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClosePicker)\n  }\n\n  handleTabClick = tag => {\n    this.setState({\n      activeTab: tag,\n    })\n  }\n\n  setPickerRef = node => {\n    this.pickerRef = node\n  }\n\n  setFontColorButtonRef = node => {\n    this.fontColorButtonRef = node\n  }\n\n  setButtonColorButtonRef = node => {\n    this.buttonColorButtonRef = node\n  }\n\n  handleFontPickerOpen = () => {\n    const { isFontPickerOpen } = this.state\n\n    if (!isFontPickerOpen) {\n      this.setState({\n        isFontPickerOpen: true,\n      })\n    }\n  }\n\n  handleButtonPickerOpen = () => {\n    const { isButtonPickerOpen } = this.state\n\n    if (!isButtonPickerOpen) {\n      this.setState({\n        isButtonPickerOpen: true,\n      })\n    }\n  }\n\n  handleClosePicker = event => {\n    const pickerExists = this.pickerRef && !this.pickerRef.contains(event.target)\n    const fontColorButtonExists = this.fontColorButtonRef && !this.fontColorButtonRef.contains(event.target)\n    const buttonColorButtonRefExists = this.buttonColorButtonRef && !this.buttonColorButtonRef.contains(event.target)\n\n    if (pickerExists && fontColorButtonExists) {\n      this.setState({\n        isFontPickerOpen: false,\n      })\n    }\n\n    if (pickerExists && buttonColorButtonRefExists) {\n      this.setState({\n        isButtonPickerOpen: false,\n      })\n    }\n  }\n\n  handleColorChange = color => {\n    const { activeTab, isFontPickerOpen } = this.state\n    const { handleColorClick } = this.props\n    let buttonName\n\n    switch (activeTab) {\n      case availableTabs[0].key:\n        buttonName = 'headerColor'\n        break\n      case availableTabs[1].key:\n        buttonName = 'mainColor'\n        break\n      case availableTabs[2].key:\n        buttonName = isFontPickerOpen ? 'buttonColor' : 'buttonBackgroundColor'\n        break\n      default:\n        break\n    }\n\n    handleColorClick(buttonName, color)\n  }\n\n  render() {\n    const { activeTab, isFontPickerOpen, isButtonPickerOpen } = this.state\n    const {\n      headerColor,\n      headerItalic,\n      handlePanelButtonClick,\n      headerBold,\n      handleFieldChange,\n      headerSize,\n      headerFont,\n      mainItalic,\n      mainBold,\n      mainSize,\n      mainFont,\n      mainColor,\n      buttonItalic,\n      buttonBold,\n      buttonSize,\n      buttonFont,\n      buttonColor,\n      buttonBackgroundColor,\n    } = this.props\n    let selectedColor\n\n    switch (activeTab) {\n      case availableTabs[0].key:\n        selectedColor = headerColor\n        break\n      case availableTabs[1].key:\n        selectedColor = mainColor\n        break\n      case availableTabs[2].key:\n        selectedColor = isFontPickerOpen ? buttonColor : buttonBackgroundColor\n        break\n      default:\n        break\n    }\n\n    return (\n      <TabsContainer>\n        <Tabs tabs={availableTabs} activeTab={activeTab} onClick={this.handleTabClick}>\n          <Panel>\n            <PanelButton\n              id=\"headerItalic\"\n              iconSrc={italicIcon}\n              checked={headerItalic}\n              onChange={handlePanelButtonClick}\n            />\n            <PanelButton id=\"headerBold\" iconSrc={boldIcon} checked={headerBold} onChange={handlePanelButtonClick} />\n            <FontColorButton\n              ref={this.setFontColorButtonRef}\n              id=\"headerColor\"\n              iconSrc={textColor}\n              checked={isFontPickerOpen}\n              onChange={this.handleFontPickerOpen}\n              color={headerColor}\n            />\n            <Select id=\"headerSize\" options={FONT_SIZES_LIST} onChange={handleFieldChange} value={headerSize} />\n            <Select id=\"headerFont\" options={FONT_FAMILIES} onChange={handleFieldChange} value={headerFont} />\n          </Panel>\n          <Panel>\n            <PanelButton id=\"mainItalic\" iconSrc={italicIcon} checked={mainItalic} onChange={handlePanelButtonClick} />\n            <PanelButton id=\"mainBold\" iconSrc={boldIcon} checked={mainBold} onChange={handlePanelButtonClick} />\n            <FontColorButton\n              ref={this.setFontColorButtonRef}\n              id=\"mainColor\"\n              iconSrc={textColor}\n              checked={isFontPickerOpen}\n              onChange={this.handleFontPickerOpen}\n              color={mainColor}\n            />\n            <Select id=\"mainSize\" options={FONT_SIZES_LIST} onChange={handleFieldChange} value={mainSize} />\n            <Select id=\"mainFont\" options={FONT_FAMILIES} onChange={handleFieldChange} value={mainFont} />\n          </Panel>\n          <Panel>\n            <PanelButton\n              id=\"buttonItalic\"\n              iconSrc={italicIcon}\n              checked={buttonItalic}\n              onChange={handlePanelButtonClick}\n            />\n            <PanelButton id=\"buttonBold\" iconSrc={boldIcon} checked={buttonBold} onChange={handlePanelButtonClick} />\n            <FontColorButton\n              ref={this.setFontColorButtonRef}\n              id=\"buttonColor\"\n              iconSrc={textColor}\n              checked={isFontPickerOpen}\n              onChange={this.handleFontPickerOpen}\n              color={buttonColor}\n            />\n            <Select id=\"buttonSize\" options={FONT_SIZES_LIST} onChange={handleFieldChange} value={buttonSize} />\n            <Select id=\"buttonFont\" options={FONT_FAMILIES} onChange={handleFieldChange} value={buttonFont} />\n            <PanelColorButton\n              ref={this.setButtonColorButtonRef}\n              color={buttonBackgroundColor}\n              onClick={this.handleButtonPickerOpen}\n            />\n          </Panel>\n        </Tabs>\n        <PickerWrapper>\n          {(isFontPickerOpen || isButtonPickerOpen) && (\n            <ColorPicker ref={this.setPickerRef} onClick={this.handleColorChange} selectedColor={selectedColor} />\n          )}\n        </PickerWrapper>\n      </TabsContainer>\n    )\n  }\n}\n\nWidgetTags.propTypes = {\n  handlePanelButtonClick: PropTypes.func.isRequired,\n  handleFieldChange: PropTypes.func.isRequired,\n  headerFont: PropTypes.string.isRequired,\n  headerBold: PropTypes.bool.isRequired,\n  headerItalic: PropTypes.bool.isRequired,\n  headerSize: PropTypes.string.isRequired,\n  headerColor: PropTypes.string.isRequired,\n  mainFont: PropTypes.string.isRequired,\n  mainBold: PropTypes.bool.isRequired,\n  mainItalic: PropTypes.bool.isRequired,\n  mainSize: PropTypes.string.isRequired,\n  mainColor: PropTypes.string.isRequired,\n  buttonFont: PropTypes.string.isRequired,\n  buttonSize: PropTypes.string.isRequired,\n  buttonBold: PropTypes.bool.isRequired,\n  buttonItalic: PropTypes.bool.isRequired,\n  buttonColor: PropTypes.string.isRequired,\n  handleColorClick: PropTypes.func.isRequired,\n  buttonBackgroundColor: PropTypes.string.isRequired,\n}\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\n\nimport { Button } from '../../../../ui/atoms'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n`\n\nconst ActionsView = () => (\n  <Wrapper>\n    <Button outline type=\"button\">\n      Назад\n    </Button>\n    <Button type=\"submit\">Вперед</Button>\n  </Wrapper>\n)\n\nexport const Actions = memo(ActionsView)\n","import React, { PureComponent } from 'react'\n\nimport { Field } from '../../../../ui/molecules'\nimport { FieldWrapper } from '../../../../ui/templates'\nimport { Sample, BackgroundColorPicker, WidgetTags, Actions } from '../../organisms'\nimport { FONT_SIZES_LIST, FONT_FAMILIES } from '../../../../constants/text'\n\nexport class Configuration extends PureComponent {\n  state = {\n    config: {\n      name: '',\n      header: 'Стать клиентом',\n      headerSize: FONT_SIZES_LIST[8],\n      headerColor: '#6f7e8e',\n      headerBold: false,\n      headerItalic: false,\n      headerFont: FONT_FAMILIES[0],\n      backgroundColor: '#fdfdfd',\n      mainFont: FONT_FAMILIES[0],\n      mainBold: false,\n      mainItalic: false,\n      mainSize: FONT_SIZES_LIST[5],\n      mainColor: '#6f7e8e',\n      buttonFont: FONT_FAMILIES[0],\n      buttonBold: false,\n      buttonItalic: false,\n      buttonSize: '14',\n      buttonColor: '#fff',\n      buttonBackgroundColor: '#6f7e8e',\n    },\n  }\n\n  handleFieldChange = ({ target }) => {\n    const { id, value } = target\n\n    this.setState(({ config }) => ({\n      config: {\n        ...config,\n        [id]: value,\n      },\n    }))\n  }\n\n  handlePanelButtonClick = ({ target }) => {\n    const { id, checked } = target\n\n    this.setState(({ config }) => ({\n      config: {\n        ...config,\n        [id]: checked,\n      },\n    }))\n  }\n\n  handleColorClick = (property, color) => {\n    this.setState(({ config }) => ({\n      config: {\n        ...config,\n        [property]: color,\n      },\n    }))\n  }\n\n  render() {\n    const { config } = this.state\n    const {\n      header,\n      headerSize,\n      headerColor,\n      headerFont,\n      headerBold,\n      headerItalic,\n      name,\n      backgroundColor,\n      mainItalic,\n      mainFont,\n      mainBold,\n      mainSize,\n      mainColor,\n      buttonFont,\n      buttonBold,\n      buttonItalic,\n      buttonSize,\n      buttonColor,\n      buttonBackgroundColor,\n    } = config\n\n    return (\n      <form>\n        <FieldWrapper>\n          <Field\n            value={name}\n            id=\"name\"\n            placeholder=\"Введите название\"\n            label=\"Название виджета:\"\n            onChange={this.handleFieldChange}\n          />\n        </FieldWrapper>\n        <FieldWrapper>\n          <Field\n            value={header}\n            id=\"header\"\n            placeholder=\"Введите заголовок\"\n            label=\"Текст заголовка виджета:\"\n            onChange={this.handleFieldChange}\n          />\n        </FieldWrapper>\n        <WidgetTags\n          headerItalic={headerItalic}\n          handlePanelButtonClick={this.handlePanelButtonClick}\n          headerBold={headerBold}\n          handleFieldChange={this.handleFieldChange}\n          headerSize={headerSize}\n          headerFont={headerFont}\n          headerColor={headerColor}\n          mainItalic={mainItalic}\n          mainBold={mainBold}\n          mainSize={mainSize}\n          mainFont={mainFont}\n          mainColor={mainColor}\n          buttonItalic={buttonItalic}\n          buttonBold={buttonBold}\n          buttonSize={buttonSize}\n          buttonFont={buttonFont}\n          buttonColor={buttonColor}\n          handleColorClick={this.handleColorClick}\n          buttonBackgroundColor={buttonBackgroundColor}\n        />\n        <BackgroundColorPicker\n          backgroundColor={backgroundColor}\n          handleFieldChange={this.handleFieldChange}\n          onClick={color => this.handleColorClick('backgroundColor', color)}\n        />\n        <Sample\n          header={header}\n          headerFont={headerFont}\n          headerSize={headerSize}\n          headerBold={headerBold}\n          headerItalic={headerItalic}\n          headerColor={headerColor}\n          backgroundColor={backgroundColor}\n          mainFont={mainFont}\n          mainBold={mainBold}\n          mainItalic={mainItalic}\n          mainSize={mainSize}\n          mainColor={mainColor}\n          buttonFont={buttonFont}\n          buttonBold={buttonBold}\n          buttonItalic={buttonItalic}\n          buttonSize={buttonSize}\n          buttonColor={buttonColor}\n          buttonBackgroundColor={buttonBackgroundColor}\n        />\n        <Actions />\n      </form>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React, { Fragment } from 'react'\n\nimport { GlobalStyle } from './global-styles'\nimport { Main } from './ui/templates'\nimport { Configuration } from './features/widgets'\n\nexport const App = () => {\n  return (\n    <Fragment>\n      <Main>\n        <Configuration />\n      </Main>\n      <GlobalStyle />\n    </Fragment>\n  )\n}\n"],"sourceRoot":""}